{"version":3,"sources":["js/promis01.js"],"names":["refs","buttons","document","querySelector","result","form","promise","addButtons","n","htmlTxt","i","Math","floor","random","innerHTML","buttonClick","e","preventDefault","target","nodeName","time","Number","innerText","delay","style","backgroundColor","ms","Promise","resolve","reject","setTimeout","then","value","logger","error","console","log","addEventListener"],"mappings":";AAAA,MAAMA,EAAO,CACTC,QAASC,SAASC,cAAc,qBAChCC,OAAQF,SAASC,cAAc,oBAC/BE,KAAMH,SAASC,cAAc,mBAEjC,IAAIG,EAEJ,SAASC,EAAWC,GACZC,IAAAA,EAAU,GACTC,IAAAA,EAAI,EAAGA,EAAIF,EAAGE,IAAK,CAEpBD,cADaE,KAAKC,MAAuB,IAAjBD,KAAKE,UAA4B,eAG7Db,EAAKC,QAAQa,UAAYL,EAO7B,SAASM,EAAYC,GAEbA,GADJA,EAAEC,iBACwB,WAAtBD,EAAEE,OAAOC,SAAuB,OAC9BC,MAAAA,EAAOC,OAAOL,EAAEE,OAAOI,WAC7BC,EAAMH,GACNpB,EAAKI,OAAOU,qCAAuCM,EAAO,eACtDpB,EAAKI,OAAOoB,MAAMC,gBAAkB,QAI5C,SAASF,EAAMG,IAGXpB,EAAU,IAAIqB,QAAQ,CAACC,EAASC,KAC5BC,WAAW,KAEHF,EAAQF,IAIbA,MAGCK,KACNC,IACEC,EAAOD,IAETE,IACEC,QAAQC,IAAI,uCACZD,QAAQC,IAAIF,KAMpB,SAASD,EAAOb,GACZe,QAAQC,uBAAuBhB,OAC/BpB,EAAKI,OAAOU,6BAA+BM,MAC3CpB,EAAKI,OAAOoB,MAAMC,gBAAkB,QA3CxClB,EAA2B,GAAhBI,KAAKE,UAGhBb,EAAKC,QAAQoC,iBAAiB,QAAStB","file":"promis01.4f3d4ee7.js","sourceRoot":"..\\src","sourcesContent":["const refs = {\r\n    buttons: document.querySelector('.promis1__buttons'),\r\n    result: document.querySelector('.promis1__result'),\r\n    form: document.querySelector('.promis1__form')\r\n}\r\nlet promise;\r\n// отображаю кнопки\r\nfunction addButtons(n) {\r\n    let htmlTxt = '';\r\n    for (i = 0; i < n; i++) {\r\n        let number = Math.floor(Math.random() * (8000 - 1000)) + 1000;\r\n        htmlTxt += `<button>${number}</button>`;\r\n    }\r\n    refs.buttons.innerHTML = htmlTxt;\r\n}\r\naddButtons(Math.random() * 10);\r\n\r\n// клик по кнопкам\r\nrefs.buttons.addEventListener('click', buttonClick);\r\n\r\nfunction buttonClick(e) {\r\n    e.preventDefault();\r\n    if (e.target.nodeName !== \"BUTTON\") return;\r\n    const time = Number(e.target.innerText)\r\n    delay(time);\r\n    refs.result.innerHTML = `The program is working. ${time / 1000} sec left`;\r\n        refs.result.style.backgroundColor = 'white';\r\n}\r\n\r\n// функция delay()\r\nfunction delay(ms) {\r\n    const isSuccess = true;\r\n    \r\n    promise = new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n            if (isSuccess) {\r\n                resolve(ms);\r\n            } else {\r\n                reject(\"Error! Error passed to reject function\");\r\n            }\r\n        }, ms);\r\n    });\r\n    \r\n    promise.then(\r\n      value => {\r\n        logger(value)\r\n      },\r\n      error => {\r\n        console.log(\"onReject call inside promise.then()\");\r\n        console.log(error); // \"Error! Error passed to reject function\"\r\n      }\r\n    );\r\n};\r\n\r\n\r\nfunction logger(time) {\r\n    console.log(`Fulfilled after ${time}ms`);\r\n    refs.result.innerHTML = `Fulfilled after ${time}ms`;\r\n    refs.result.style.backgroundColor = 'green';\r\n}"]}